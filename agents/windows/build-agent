#!/bin/bash
# Build Windows agent with GNU autotools.
#
# Options:
#          -jN  where N is the number of parallel build jobs
#          (for usage, see 'man make'). Default: half of available CPU cores.
# Parameters:
#          Possible make targets. By default, a parallel build and
#          install-strip (non-debug) is done and an msi installer produced.
#
# Requires the environment variable CHROOT_BUILD_DIR to be set.

set -e

# Ensure that CHROOT_BUILD_DIR is set.
[[ -z $CHROOT_BUILD_DIR ]] && exit 1

. /$CHROOT_BUILD_DIR/agents/windows/build.sh

parse-args "$@"

cd /$CHROOT_BUILD_DIR/agents/windows

autoreconf --install

build_archs=(32 64)
if [[ "$targets" == unittest ]] ; then
    # Only unittest
    build_archs=()
elif [[ " $targets " =~ " unittest " ]] ; then
    # unittest together with other target(s)
    targets=${targets/unittest/}
fi

# Build 32 and 64 bit in parallel, wait for child processes to terminate.
children=()
for arch in "${build_archs[@]}" ; do
    build $arch &
    children+=($!)
done

for pid in "${children[@]}" ; do
    # If any subprocess fails, wait for the rest to exit in a controlled way.
    wait $pid || { wait; exit 1; }
done

# If no special targets given, produce msi installer as post-install step.
if [[ -z "$targets" ]] ; then
    VERSION=$(grep PACKAGE_VERSION= configure | sed "s/.*\x27\(.*\)\x27/\1/g")
    cd msibuild
    make BUILD_VERSION=$(cat ../build_version) CHECK_MK_VERSION=$VERSION
    chmod +x check_mk_agent.msi
    mv check_mk_agent.msi ..
    cd -
fi

if [[ ! "$targets" =~ clean ]] ; then
    # Run unittest only in 64 bit
    targets=unittest
    build 64
fi
