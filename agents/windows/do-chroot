#!/bin/bash

# $1: cmd(s) to be executed within chroot jail
# if non-existent, enter chroot jail with 'bash -l'
CMD="$1"

export HOSTNAME=cmk-windows-agent-chroot
unset LANG
CHROOTNAME=WinAgent

BASE="$(dirname "$(dirname "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)")")"

if [ -z $CHROOT_PATH ]; then
    echo "ERROR: CHROOT_PATH not set"
    exit 1
fi

if [ -z $CHROOT_BUILD_DIR ]; then
    echo "ERROR: CHROOT_BUILD_DIR not set"
    exit 1
fi

if [ ! -e $CHROOT_PATH/proc/self ] ; then
    mount -t proc proc $CHROOT_PATH/proc
fi

if [ ! -e $CHROOT_PATH/dev/sda ] ; then
    mount -o bind /dev $CHROOT_PATH/dev
fi

if [ ! -e $CHROOT_PATH/dev/pts/ptmx ] ; then
    mount -t devpts devpts $CHROOT_PATH/dev/pts 2>/dev/null || true
fi

if [ ! -e $CHROOT_PATH/$CHROOT_BUILD_DIR ]; then
    mkdir $CHROOT_PATH/$CHROOT_BUILD_DIR
fi

if [ ! -e $CHROOT_PATH/$CHROOT_BUILD_DIR/Makefile ] ; then
    mount -o bind $BASE $CHROOT_PATH/$CHROOT_BUILD_DIR
fi

if [ -n "$CMD" ] ; then
    chroot $CHROOT_PATH \
           /usr/bin/env CHROOTNAME=$CHROOTNAME NEW_VERSION=$NEW_VERSION \
           bash -c "$CMD"
else
    chroot $CHROOT_PATH /usr/bin/env CHROOTNAME=$CHROOTNAME bash -l
fi

umount $CHROOT_PATH/$CHROOT_BUILD_DIR
umount $CHROOT_PATH/dev/pts
sleep 2
umount $CHROOT_PATH/dev
umount $CHROOT_PATH/proc
