stages:
    - NAME: 'Python Typing'
      ONLY_WHEN_NOT_EMPTY: CHANGED_PYTHON_FILES
      DIR: 'tests'
      ENV_VARS:
        JUNIT_XML: "--junit-xml ${RESULTS}/mypy.xml"
      COMMAND: 'make --quiet test-mypy-docker'
      TEXT_ON_SKIP: 'No Python files changed'

    - NAME: 'Python Format'
      ONLY_WHEN_NOT_EMPTY: CHANGED_PYTHON_FILES
      DIR: 'tests'
      ENV_VARS:
        PYTHON_FILES: "${CHANGED_PYTHON_FILES}"
      COMMAND: "make --quiet test-format-python-docker &> ${RESULTS}/python-yapf.txt"
      TEXT_ON_SKIP: 'No Python files changed'

    - NAME: 'Python Unit Test'
      ONLY_WHEN_NOT_EMPTY: CHANGED_PYTHON_FILES
      DIR: 'tests'
      ENV_VARS:
        PYTEST_ADDOPTS: "--junitxml=${RESULTS}/python3-unit-junit.xml"
      COMMAND: "make test-unit-docker"
      TEXT_ON_SKIP: 'No Python files changed'

    - NAME: 'Python Linting'
      ONLY_WHEN_NOT_EMPTY: CHANGED_PYLINT_RC_FILE,CHANGED_PYTHON_FILES
      DIR: 'tests'
      ENV_VARS:
        WORKDIR: "${WORKDIR}"
        PYLINT_ARGS: "--output-format=cmk_parseable"
      COMMAND: "make test-pylint-docker &> ${RESULTS}/pylint.txt"
      TEXT_ON_SKIP: 'Neither .pylintrc nor Python files changed'

    - NAME: 'Shell Format'
      DIR: 'tests'
      COMMAND: "make --quiet test-format-shell &> ${RESULTS}/shell-format.txt"

    - NAME: 'Shell Unit'
      DIR: 'tests'
      COMMAND: "make test-unit-sh-docker &> ${RESULTS}/shell-unit.txt"

    - NAME: 'JavaScript Format'
      ONLY_WHEN_NOT_EMPTY: CHANGED_JS_FILES
      DIR: 'tests'
      COMMAND: "make --quiet test-format-js-docker &> ${RESULTS}/js-prettier.txt"
      TEXT_ON_SKIP: 'No JavaScript files changed'

    - NAME: 'CSS Format'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CSS_FILES
      DIR: 'tests'
      COMMAND: "make --quiet test-format-css-docker &> ${RESULTS}/css-prettier.txt"
      TEXT_ON_SKIP: 'No CSS files changed'

    - NAME: 'Agent Plugin Unit Tests'
      ONLY_WHEN_NOT_EMPTY: CHANGED_AGENT_PLUGINS,CHANGED_AGENT_PLUGINS_TESTS
      DIR: 'tests'
      ENV_VARS:
        PYTEST_ADDOPTS: "--junitxml=${RESULTS}/agent-plugin-unit-junit.xml"
        DOCKER_ADDOPTS: "-v ${RESULTS}:${RESULTS}"
      COMMAND: "make test-agent-plugin-docker"
      TEXT_ON_SKIP: 'No agent files changed'

    - NAME: 'NEB/CMC Compile'
      COMMAND: "make compile-neb-cmc-docker &> ${RESULTS}/neb-cmc-compile.txt"

    - NAME: 'Cppcheck Livestatus'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'tests'
      ENV_VARS:
        RESULTS: "${RESULTS}"
      COMMAND: "make test-cppcheck-livestatus-docker"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'Cppcheck core'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'tests'
      ENV_VARS:
        RESULTS: "${RESULTS}"
      COMMAND: "make test-cppcheck-core-docker"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'Clang Tidy Livestatus'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'tests'
      ENV_VARS:
        RESULTS: "${RESULTS}"
        GERRIT_PATCHSET_REVISION: "${GERRIT_PATCHSET_REVISION}"
      COMMAND: "make test-tidy-livestatus-docker"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'Clang Tidy core'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'tests'
      ENV_VARS:
        RESULTS: "${RESULTS}"
        GERRIT_PATCHSET_REVISION: "${GERRIT_PATCHSET_REVISION}"
      COMMAND: "make test-tidy-core-docker"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'IWYU Livestatus'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'tests'
      ENV_VARS:
        RESULTS: "${RESULTS}"
        GERRIT_PATCHSET_REVISION: "${GERRIT_PATCHSET_REVISION}"
      COMMAND: "make test-iwyu-livestatus-docker"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'IWYU core'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'tests'
      ENV_VARS:
        RESULTS: "${RESULTS}"
        GERRIT_PATCHSET_REVISION: "${GERRIT_PATCHSET_REVISION}"
      COMMAND: "make test-iwyu-core-docker"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'Unit Test Livestatus'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'livestatus/src/test'
      ENV_VARS:
        RESULTS: "${RESULTS}"
      COMMAND: "./.f12 &> ${RESULTS}/livestatus-neb-cmc.txt"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'Unit Test core'
      ONLY_WHEN_NOT_EMPTY: CHANGED_CORE_FILES
      DIR: 'enterprise/core/src/test'
      ENV_VARS:
        RESULTS: "${RESULTS}"
      COMMAND: "./.f12 &> ${RESULTS}/core-neb-cmc.txt"
      TEXT_ON_SKIP: 'No core files changed'

    - NAME: 'Software Documentation Generation'
      ONLY_WHEN_NOT_EMPTY: CHANGED_SW_DOC_FILES
      COMMAND: "make sw-documentation-docker &> ${RESULTS}/sw-documentation.txt"
      TEXT_ON_SKIP: 'No SW Documentation files changed'

