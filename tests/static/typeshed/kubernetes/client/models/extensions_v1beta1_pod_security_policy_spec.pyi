# Stubs for kubernetes.client.models.extensions_v1beta1_pod_security_policy_spec (Python 2)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class ExtensionsV1beta1PodSecurityPolicySpec:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    allow_privilege_escalation: Any = ...
    allowed_capabilities: Any = ...
    allowed_flex_volumes: Any = ...
    allowed_host_paths: Any = ...
    allowed_proc_mount_types: Any = ...
    allowed_unsafe_sysctls: Any = ...
    default_add_capabilities: Any = ...
    default_allow_privilege_escalation: Any = ...
    forbidden_sysctls: Any = ...
    fs_group: Any = ...
    host_ipc: Any = ...
    host_network: Any = ...
    host_pid: Any = ...
    host_ports: Any = ...
    privileged: Any = ...
    read_only_root_filesystem: Any = ...
    required_drop_capabilities: Any = ...
    run_as_user: Any = ...
    se_linux: Any = ...
    supplemental_groups: Any = ...
    volumes: Any = ...
    def __init__(self, allow_privilege_escalation: Optional[Any] = ..., allowed_capabilities: Optional[Any] = ..., allowed_flex_volumes: Optional[Any] = ..., allowed_host_paths: Optional[Any] = ..., allowed_proc_mount_types: Optional[Any] = ..., allowed_unsafe_sysctls: Optional[Any] = ..., default_add_capabilities: Optional[Any] = ..., default_allow_privilege_escalation: Optional[Any] = ..., forbidden_sysctls: Optional[Any] = ..., fs_group: Optional[Any] = ..., host_ipc: Optional[Any] = ..., host_network: Optional[Any] = ..., host_pid: Optional[Any] = ..., host_ports: Optional[Any] = ..., privileged: Optional[Any] = ..., read_only_root_filesystem: Optional[Any] = ..., required_drop_capabilities: Optional[Any] = ..., run_as_user: Optional[Any] = ..., se_linux: Optional[Any] = ..., supplemental_groups: Optional[Any] = ..., volumes: Optional[Any] = ...) -> None: ...
    @property
    def allow_privilege_escalation(self): ...
    @allow_privilege_escalation.setter
    def allow_privilege_escalation(self, allow_privilege_escalation: Any) -> None: ...
    @property
    def allowed_capabilities(self): ...
    @allowed_capabilities.setter
    def allowed_capabilities(self, allowed_capabilities: Any) -> None: ...
    @property
    def allowed_flex_volumes(self): ...
    @allowed_flex_volumes.setter
    def allowed_flex_volumes(self, allowed_flex_volumes: Any) -> None: ...
    @property
    def allowed_host_paths(self): ...
    @allowed_host_paths.setter
    def allowed_host_paths(self, allowed_host_paths: Any) -> None: ...
    @property
    def allowed_proc_mount_types(self): ...
    @allowed_proc_mount_types.setter
    def allowed_proc_mount_types(self, allowed_proc_mount_types: Any) -> None: ...
    @property
    def allowed_unsafe_sysctls(self): ...
    @allowed_unsafe_sysctls.setter
    def allowed_unsafe_sysctls(self, allowed_unsafe_sysctls: Any) -> None: ...
    @property
    def default_add_capabilities(self): ...
    @default_add_capabilities.setter
    def default_add_capabilities(self, default_add_capabilities: Any) -> None: ...
    @property
    def default_allow_privilege_escalation(self): ...
    @default_allow_privilege_escalation.setter
    def default_allow_privilege_escalation(self, default_allow_privilege_escalation: Any) -> None: ...
    @property
    def forbidden_sysctls(self): ...
    @forbidden_sysctls.setter
    def forbidden_sysctls(self, forbidden_sysctls: Any) -> None: ...
    @property
    def fs_group(self): ...
    @fs_group.setter
    def fs_group(self, fs_group: Any) -> None: ...
    @property
    def host_ipc(self): ...
    @host_ipc.setter
    def host_ipc(self, host_ipc: Any) -> None: ...
    @property
    def host_network(self): ...
    @host_network.setter
    def host_network(self, host_network: Any) -> None: ...
    @property
    def host_pid(self): ...
    @host_pid.setter
    def host_pid(self, host_pid: Any) -> None: ...
    @property
    def host_ports(self): ...
    @host_ports.setter
    def host_ports(self, host_ports: Any) -> None: ...
    @property
    def privileged(self): ...
    @privileged.setter
    def privileged(self, privileged: Any) -> None: ...
    @property
    def read_only_root_filesystem(self): ...
    @read_only_root_filesystem.setter
    def read_only_root_filesystem(self, read_only_root_filesystem: Any) -> None: ...
    @property
    def required_drop_capabilities(self): ...
    @required_drop_capabilities.setter
    def required_drop_capabilities(self, required_drop_capabilities: Any) -> None: ...
    @property
    def run_as_user(self): ...
    @run_as_user.setter
    def run_as_user(self, run_as_user: Any) -> None: ...
    @property
    def se_linux(self): ...
    @se_linux.setter
    def se_linux(self, se_linux: Any) -> None: ...
    @property
    def supplemental_groups(self): ...
    @supplemental_groups.setter
    def supplemental_groups(self, supplemental_groups: Any) -> None: ...
    @property
    def volumes(self): ...
    @volumes.setter
    def volumes(self, volumes: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any): ...
    def __ne__(self, other: Any): ...
