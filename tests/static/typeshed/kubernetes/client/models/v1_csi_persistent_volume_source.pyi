# Stubs for kubernetes.client.models.v1_csi_persistent_volume_source (Python 2)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class V1CSIPersistentVolumeSource:
    swagger_types: Any = ...
    attribute_map: Any = ...
    discriminator: Any = ...
    controller_publish_secret_ref: Any = ...
    driver: Any = ...
    fs_type: Any = ...
    node_publish_secret_ref: Any = ...
    node_stage_secret_ref: Any = ...
    read_only: Any = ...
    volume_attributes: Any = ...
    volume_handle: Any = ...
    def __init__(self, controller_publish_secret_ref: Optional[Any] = ..., driver: Optional[Any] = ..., fs_type: Optional[Any] = ..., node_publish_secret_ref: Optional[Any] = ..., node_stage_secret_ref: Optional[Any] = ..., read_only: Optional[Any] = ..., volume_attributes: Optional[Any] = ..., volume_handle: Optional[Any] = ...) -> None: ...
    @property
    def controller_publish_secret_ref(self): ...
    @controller_publish_secret_ref.setter
    def controller_publish_secret_ref(self, controller_publish_secret_ref: Any) -> None: ...
    @property
    def driver(self): ...
    @driver.setter
    def driver(self, driver: Any) -> None: ...
    @property
    def fs_type(self): ...
    @fs_type.setter
    def fs_type(self, fs_type: Any) -> None: ...
    @property
    def node_publish_secret_ref(self): ...
    @node_publish_secret_ref.setter
    def node_publish_secret_ref(self, node_publish_secret_ref: Any) -> None: ...
    @property
    def node_stage_secret_ref(self): ...
    @node_stage_secret_ref.setter
    def node_stage_secret_ref(self, node_stage_secret_ref: Any) -> None: ...
    @property
    def read_only(self): ...
    @read_only.setter
    def read_only(self, read_only: Any) -> None: ...
    @property
    def volume_attributes(self): ...
    @volume_attributes.setter
    def volume_attributes(self, volume_attributes: Any) -> None: ...
    @property
    def volume_handle(self): ...
    @volume_handle.setter
    def volume_handle(self, volume_handle: Any) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any): ...
    def __ne__(self, other: Any): ...
