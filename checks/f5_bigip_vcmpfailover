#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example SNMP output:
#
# .1.3.6.1.4.1.3375.2.1.13.1.1.0 0 # sysVcmpNumber
# .1.3.6.1.4.1.3375.2.1.14.1.1.0 3 # sysCmFailoverStatusId


def parse_f5_bigip_vcmpfailover(info):
    return {
        node: status for node, count, status in info
        if int(count) == 0 # do nothing if we're at a vCMP-/Host/
    }


def inventory_f5_bigip_vcmpfailover(parsed):
    if parsed:
        return [ ( None, None ) ]


def check_f5_bigip_vcmpfailover(_no_item, params, parsed):
    if parsed:
        return check_f5_bigip_cluster_status(_no_item, params, parsed, is_v11_2 = True)


check_info["f5_bigip_vcmpfailover"] = {
    "parse_function"          : parse_f5_bigip_vcmpfailover,
    "check_function"          : check_f5_bigip_vcmpfailover,
    "inventory_function"      : inventory_f5_bigip_vcmpfailover,
    "group"                   : "cluster_status",
    "default_levels_variable" : "f5_bigip_cluster_default_levels",
    "service_description"     : "BIG-IP vCMP Guest Failover Status",
    "node_info"               : True,
    "snmp_info"               : (".1.3.6.1.4.1.3375.2.1", [
                                    "13.1.1.0", # sysVcmpNumber
                                    "14.3.1.0", # sysCmFailoverStatusId
                               ]),
    "snmp_scan_function"      : lambda oid: scan_f5_bigip_cluster_status(oid, is_v11_2=True),
    "includes"                : ["f5_bigip.include"],
}
