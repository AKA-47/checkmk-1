#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_3par_system(parsed):
    if "name" in parsed:
        return [ ( parsed['name'], None ) ]


def check_3par_system(item, _no_params, parsed):
    state = 0

    serial = parsed.get('serialNumber', "N/A")
    model = parsed.get('model', "N/A")
    sys_version = parsed.get('systemVersion', "N/A")
    cluster_nodes = parsed.get('clusterNodes', 0)
    online_nodes = parsed.get('onlineNodes', 0)

    yield state, 'Model: %s, Version: %s, Serial number: %s, Online nodes: %s/%s' % \
        (model, sys_version, serial, len(online_nodes), len(cluster_nodes))

    if len(online_nodes) < len(cluster_nodes):
        state = 2
        for node in cluster_nodes:
            if not node in online_nodes:
               yield state, "(Node %s not available)" % node


check_info['3par_system'] = {
    'parse_function'        : parse_3par,
    'inventory_function'    : inventory_3par_system,
    'check_function'        : check_3par_system,
    'service_description'   : "3PAR %s",
    'includes'              : [ "3par.include", "df.include" ]
}
