#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# <<<tsm_storagepool>>>
# tsmfarm2      Bkup      LTOBACK               1399378.64
# tsmfarm2      Arch      LTOARCHCOPY            157288.14

# <<<tsm_storagepool>>>
# default        Bkup      VP4200.GOLD                                                254776345.58^M
# default        Bkup      VP4200.TDP                                                 204386407.76^M
# default        Bkup      VP860.CM                                                   122661787.24^M
# default                  DPC.EXC.2013                                                           ^M
# default                  DPC.EXC.CM                                                             ^M
# default                  DPC.EXCDAG                                                             ^M
# default                  DPC.GOLD.ALL                                                           ^M
# default                  DPC.GOLD.UNIX                                                          ^M
# default                  DPC.GOLD.VE


def parse_tsm_storagepools(info):
    parsed = {}
    for line in info:
        if len(line) < 4:
            continue

        inst, stype, name, size = line[:4]
        if inst == "default":
            item = name
        else:
            item = inst + " / " + name
        parsed.setdefault(item, {"type" : stype, "size" : size.replace(",", ".")})

    return parsed


def inventory_tsm_storagepools(parsed):
    for inst in parsed:
        yield inst, None


def check_tsm_storagepools(item, _no_params, parsed):
    if item not in parsed:
        return 3, "no such storage pool"

    data  = parsed[item]
    stype = data["type"]
    size  = data["size"]
    return 0, "Used size: %s, Type: %s" % \
           (get_bytes_human_readable(int(float(size) * 1024 * 1024)), stype), \
           [ ("used", float(size)) ]


check_info['tsm_storagepools'] = {
    "parse_function"      : parse_tsm_storagepools,
    "inventory_function"  : inventory_tsm_storagepools,
    "check_function"      : check_tsm_storagepools,
    "service_description" : "TSM Storagepool %s",
    "has_perfdata"        : True,
}
