#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def agent_aws_arguments(params, hostname, ipaddress):
    args = [
        "--aws-access-key-id",
        params["--aws-access-key-id"],
        "--aws-secret-access-key",
        passwordstore_get_cmdline("%s", params["--aws-secret-access-key"]),
    ]
    args.append("--regions")
    args += params["--regions"]

    services = params.get("--services", {})
    if services:
        args.append("--services")
        # We need to sort the inner services-as-a-dict-params
        # in order to create reliable tests
        args += sorted(services.keys())

    # {'s3': {'buckets': 'all'} already handled by services.keys()
    # {'s3': {'buckets', ('buckets', ['cmk-dev', 'foo'])}}
    try:
        _, buckets = services.get('s3', {}).get('buckets')
    except (TypeError, ValueError):
        pass
    else:
        args.append("--buckets")
        args += buckets

    args += [
        "--hostname",
        hostname,
    ]
    return args


special_agent_info['aws'] = agent_aws_arguments
