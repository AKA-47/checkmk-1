#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# .1.3.6.1.4.1.9.9.500.1.3.2.1.2.1001.0 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.2.1001.1 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.2.2001.0 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.2.2001.1 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.2.3001.0 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.2.3001.1 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.3.1001.0 "00 00 00 00 00 00 "
# .1.3.6.1.4.1.9.9.500.1.3.2.1.3.1001.1 "00 00 00 00 00 00 "
# .1.3.6.1.4.1.9.9.500.1.3.2.1.3.2001.0 "00 00 00 00 00 00 "
# .1.3.6.1.4.1.9.9.500.1.3.2.1.3.2001.1 "00 00 00 00 00 00 "
# .1.3.6.1.4.1.9.9.500.1.3.2.1.3.3001.0 "00 00 00 00 00 00 "
# .1.3.6.1.4.1.9.9.500.1.3.2.1.3.3001.1 "00 00 00 00 00 00 "
# .1.3.6.1.4.1.9.9.500.1.3.2.1.4.1001.0 0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.4.1001.1 0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.4.2001.0 0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.4.2001.1 0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.4.3001.0 0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.4.3001.1 0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.1001.0 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.1001.1 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.2001.0 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.2001.1 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.3001.0 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.3001.1 1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.6.1001.0 40
# .1.3.6.1.4.1.9.9.500.1.3.2.1.6.1001.1 40
# .1.3.6.1.4.1.9.9.500.1.3.2.1.6.2001.0 40
# .1.3.6.1.4.1.9.9.500.1.3.2.1.6.2001.1 40
# .1.3.6.1.4.1.9.9.500.1.3.2.1.6.3001.0 40
# .1.3.6.1.4.1.9.9.500.1.3.2.1.6.3001.1 40
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.1001.0 "Port 1"
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.1001.1 "Port 2"
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.2001.0 "Port 1"
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.2001.1 "Port 2"
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.3001.0 "Port 1"
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.3001.1 "Port 2"


def inventory_cisco_stackpower(info):
    return [("%s %s" % (oid.split(".")[0], port_name), None)
            for oid, port_oper_status, _port_link_status, port_name in info
            if port_oper_status == '1']


def check_cisco_stackpower(item, params, info):
    map_oper_status = {
        '1': (0, 'Port enabled'),
        '2': (2, 'Port disabled'),
    }

    map_status = {
        '1': (0, 'Status: connected and operational'),
        '2': (2, 'Status: forced down or not connected'),
    }

    for oid, port_oper_status, port_link_status, port_name in info:
        if item == '%s %s' % (oid.split(".")[0], port_name):
            yield map_oper_status[port_oper_status]
            yield map_status[port_link_status]


check_info['cisco_stackpower'] = {
    'inventory_function': inventory_cisco_stackpower,
    'check_function': check_cisco_stackpower,
    'service_description': 'Stackpower Interface %s',
    'snmp_info': (
        '.1.3.6.1.4.1.9.9.500.1.3.2.1',
        [
            OID_END,
            '2',  # cswStackPowerPortOperStatus
            '5',  # cswStackPowerPortLinkStatus
            '7',  # cswStackPowerPortName
        ]),
    'snmp_scan_function': lambda oid: oid('.1.3.6.1.2.1.1.2.0').startswith('.1.3.6.1.4.1.9.1.516'),
}
