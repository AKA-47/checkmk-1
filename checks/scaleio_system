#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# example output


def inventory_scaleio_system(parsed):
    for entry in parsed:
        yield entry, {}


def check_scaleio_system(item, params, parsed):
    data = get_scaleio_data(item, parsed)

    if data:
        if not "levels" in params:
            params["levels"] = (float(data["CAPACITY_ALERT_HIGH_THRESHOLD"][0].strip("%")), \
                                float(data["CAPACITY_ALERT_CRITICAL_THRESHOLD"][0].strip("%")))
        total = int(data["MAX_CAPACITY_IN_KB"][2].strip("(")) * 1024
        free = int(data["UNUSED_CAPACITY_IN_KB"][2].strip("(")) * 1024

        yield df_check_filesystem_list(item, params, [ (item, total, free, 0) ])


check_info['scaleio_system'] = {
    'parse_function'        : lambda info: parse_scaleio(info, "SYSTEM"),
    'inventory_function'    : inventory_scaleio_system,
    'check_function'        : check_scaleio_system,
    'service_description'   : 'ScaleIO System %s',
    'includes'              : [ 'df.include', 'scaleio.include' ],
    'group'                 : 'filesystem',
    'has_perfdata'          : True,
}
