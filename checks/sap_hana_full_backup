#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_sap_hana_full_backup(info):
    parsed = {}
    instance = ""
    for line in info:
        if line[0].startswith("[[[") and line[0].endswith("]]]"):
            instance = line[0][3:-3]
            continue
        date, age_days, duration, backup_state = [x.strip() for x in line[:4]]
        parsed.setdefault(
            instance, {
                "age_days": age_days,
                "duration": duration,
                "date": date.replace('"', ''),
                "state": backup_state.replace('"', ''),
            })
    return parsed


def inventory_sap_hana_full_backup(parsed):
    return [(instance, {}) for instance in parsed]


def check_sap_hana_full_backup(item, params, parsed):
    data = parsed.get(item)
    if not data:
        return
    backup_state = data["state"]
    infotext = "Status: %s" % backup_state
    if backup_state == "running":
        return 0, infotext

    state = 0
    if backup_state != "successful":
        state = 2
    return state, '%s, Duration: %s, %s days ago' % \
           (infotext, get_age_human_readable(int(data["duration"])),
            int(data["age_days"]))


check_info['sap_hana_full_backup'] = {
    'parse_function': parse_sap_hana_full_backup,
    'inventory_function': inventory_sap_hana_full_backup,
    'check_function': check_sap_hana_full_backup,
    'service_description': 'SAP HANA Full Backup %s',
}
