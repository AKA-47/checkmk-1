#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_ups_cps_outphase(info):
    parsed = {}
    parsed["1"] = {}
    parsed["1"] = {
        "voltage": float(info[0][0]) / 10,
        "frequency": float(info[0][1]) / 10,
        "output_load": float(info[0][2]),
        "current": float(info[0][3]) / 10,
    }
    return parsed


def inventory_ups_cps_outphase(parsed):
    if parsed:
        return [("1", {})]


check_info["ups_cps_outphase"] = {
    "parse_function": parse_ups_cps_outphase,
    "inventory_function": inventory_ups_cps_outphase,
    "check_function": check_elphase,
    "service_description": "UPS Output Phase %s",
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.3808.1.1.1"
                                                                          ),
    "snmp_info": (
        ".1.3.6.1.4.1.3808.1.1.1.4.2",
        [
            "1",  #upsAdvanceOutputVoltage "in 1/10 VAC"
            "2",  #upsAdvanceOutputFrequency "in 1/10 Hz"
            "3",  #upsAdvanceOutputLoad "in percentage"
            "4",  #upsAdvanceOutputCurrent "in AmpÃ¨re"
        ]),
    "includes": ["elphase.include"],
    "group": "ups_outphase",
}
