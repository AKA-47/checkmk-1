#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.3.1.1 "CPU1"
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.3.1.2 "CPU2"
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.4.1.1 3
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.4.1.2 2
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.5.1.1 "Intel(R) Xeon(R) CPU E5-2620 v2 @ 2.10GHz"
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.5.1.2 ""
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.8.1.1 2100
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.8.1.2 0
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.13.1.1 6
#.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1.13.1.2 0

def inventory_fsc_sc2_cpu_status(info):
    for line in info:
        if line[1] != '2':
            yield line[0], None


def check_fsc_sc2_cpu_status(item, _no_params, info):
    def get_cpu_status(status):
        return {
            '1' :   (3, 'unknown'),
            '2' :   (3, 'not-present'),
            '3' :   (0, 'ok'),
            '4' :   (0, 'disabled'),
            '5' :   (2, 'error'),
            '6' :   (2, 'failed'),
            '7' :   (1, 'missing-termination'),
            '8' :   (1, 'prefailure-warning'),
        }.get(status, (3, 'unknown'))
    for designation, status, model, speed, cores in info:
        if designation == item:
            status_state, status_txt = get_cpu_status(status)
            return status_state, 'Status is {0}, {1}, {2} cores @ {3} MHz'.format(status_txt, model, cores, speed)


check_info['fsc_sc2_cpu_status'] = {
    'inventory_function'  : inventory_fsc_sc2_cpu_status,
    'check_function'      : check_fsc_sc2_cpu_status,
    'service_description' : 'FSC %s',
    'snmp_info':            ('.1.3.6.1.4.1.231.2.10.2.2.10.6.4.1', [
                                 '3',    #sc2cpuDesignation
                                 '4',    #sc2cpuStatus
                                 '5',    #sc2cpuModelName
                                 '8',    #sc2cpuCurrentSpeed
                                 '13',   #sc2cpuNumberCores
                            ]),
    'snmp_scan_function'  : is_fsc_sc2,
    'includes'            : [ 'fsc.include' ],
}
