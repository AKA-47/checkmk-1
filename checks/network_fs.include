#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# <<<...mounts>>>
# /foobar hanging 0 0 0 0
# /with spaces ok 217492 123563 112515 524288
# /with spaces Permission denied


def parse_network_fs_mounts(info):
    parsed = {}
    for line in info:
        if " ".join(line[-2:]) == "Permission denied":
            parsed.setdefault(" ".join(line[:-2]), {"state": "Permission denied"})

        else:
            parsed.setdefault(" ".join(line[:-5]), {
                "state": line[-5],
                "data": line[-4:],
            })

    return parsed


def inventory_network_fs_mounts(parsed):
    for mp in parsed:
        yield mp, None


def check_network_fs_mounts(item, params, parsed):
    if item in parsed:
        attrs = parsed[item]
        state = attrs["state"]
        data = attrs.get("data")

        if state == "Permission denied" or data is None:
            return 2, "Permissions denied"

        size_blocks_, unused_, free_blocks_, block_size_ = data
        if size_blocks_ == "-":
            if state == 'ok':
               return 0, "mount seems OK"
            else:
               return 2, "Server not responding"

        size_blocks = int(size_blocks_)
        free_blocks = int(free_blocks_) # for non-root user
        blocksize   = int(block_size_)

        if size_blocks <= 0 or free_blocks < 0 or blocksize > 1024*1024:
            return 2, "Stale fs handle"

        size_bytes = size_blocks * blocksize
        free_bytes = free_blocks * blocksize
        used_bytes = size_bytes - free_bytes
        used_perc  = 100.0 * used_bytes / size_bytes
        perfdata   = None
        if params is not None and params.get("has_perfdata"):
            perfdata = [("fs_size", size_bytes), ("fs_used", used_bytes)]

        if state == 'ok':
            if size_bytes == 0:
                return 0, "server is responding", perfdata

            return 0, "%.1f%% used (%s of %s)" % \
                      (used_perc, get_bytes_human_readable(used_bytes),
                       get_bytes_human_readable(size_bytes)), perfdata

        else:
            return 2, "server not responding", perfdata

    return 3, "%s not mounted" % item
