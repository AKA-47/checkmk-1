#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


@get_parsed_item_data
def check_couchbase_nodes_cache(_item, params, data):

    misses = data.get('ep_bg_fetched')
    hits = data.get('get_hits')
    if None in (misses, hits):
        return
    total = misses + hits
    hit_perc = (hits / float(total)) * 100.0 if total != 0 else 100.0
    miss_rate = get_rate("%s.cache_misses", time.time(), misses)

    yield check_levels(
        miss_rate,
        'cache_misses_rate',
        params.get('cache_misses'),
        human_readable_func=six.text_type,
        unit="/s",
        infoname="Cache misses",
    )

    yield check_levels(
        hit_perc,
        'cache_hit_ratio',
        (None, None) + params.get('cache_hits', (None, None)),
        human_readable_func=get_percent_human_readable,
        infoname='Cache hits',
        boundaries=(0, 100),
    )


check_info['couchbase_nodes_cache'] = {
    'parse_function': parse_couchbase_lines,
    'inventory_function': discover(lambda k, v: 'get_hits' in v and 'ep_bg_fetched' in v),
    'check_function': check_couchbase_nodes_cache,
    'service_description': 'Couchbase %s Cache',
    'includes': ['couchbase.include'],
    'group': 'couchbase_cache',
    'has_perfdata': True
}
