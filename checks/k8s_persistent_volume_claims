#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_k8s_persistent_volume_claims(info):
    import json
    return json.loads(info[0][0])


@discover
def inventory_k8s_persistent_volume_claims(_claim, data):
    return data.get('phase', '') == 'Bound'


@get_parsed_item_data
def check_k8s_persistent_volume_claims(_no_item, _no_params, claim):
    status, phase = 0, claim.get('phase')
    if phase is None:
        yield 3, 'Phase: Unknown'
        return

    if phase != 'Bound':
        status = 2
    yield status, 'Phase: %s' % phase

    namespace = claim.get('namespace')
    if namespace:
        yield 0, 'Namespace: %s' % namespace
    volume = claim.get('volume')
    if volume:
        yield 0, 'Volume: %s' % volume


check_info['k8s_persistent_volume_claims'] = {
    'parse_function': parse_k8s_persistent_volume_claims,
    'inventory_function': inventory_k8s_persistent_volume_claims,
    'check_function': check_k8s_persistent_volume_claims,
    'service_description': 'PVC %s',
}
