#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# example output


def inventory_stormshield_route(info):
    for line in info:
        yield (line[1], None)


def check_stormshield_route(item, params, info):
    data = False
    status = {
        'UP'    : (0, "Up"),
        'DOWN'  : (2, "Down"),
        'UNDEF' : (3, "Unknown"),
    }
    for line in info:
        if line[1] == item:
            data = line
    if data:
        state, state_readable = status[data[3]]
        yield state, "Type: %s, Router: %s, Status: %s" % \
                      (data[2], data[0], state_readable)

        if not data[4] == "":
            yield 0, "(since %s)" % data[4]


check_info['stormshield_route'] = {
    'inventory_function'    : inventory_stormshield_route,
    'check_function'        : check_stormshield_route,
    'service_description'   : 'Gateway %s',
    'snmp_info'             : ('.1.3.6.1.4.1.11256.1.14.1.1', [
                                    '4',  # STORMSHIELD-ROUTE-MIB::snsRouteRouterName
                                    '5',  # STORMSHIELD-ROUTE-MIB::snsRouteGatewayName
                                    '7',  # STORMSHIELD-ROUTE-MIB::snsRouteGatewayType
                                    '9',  # STORMSHIELD-ROUTE-MIB::snsRouteState
                                    '10', # STORMSHIELD-ROUTE-MIB::snsRouteStateLastChange
                              ]),
    'snmp_scan_function'    : stormshield_scan_function,
    'includes'              : [ 'stormshield.include' ],
}
