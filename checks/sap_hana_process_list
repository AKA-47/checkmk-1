#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# example output


def parse_sap_hana_process_list(info):
    parsed = {}
    header = None
    for line in info:
        if len(line) < 7:
            continue
        line = map(lambda x: x.strip(), line)
        if line == ['name', 'description', 'dispstatus', 'textstatus',
                    'starttime', 'elapsedtime', 'pid']:
            header = line[1:]
        elif header is not None:
            parsed.setdefault(line[0], dict(zip(header, line[1:])))
    return parsed


def inventory_sap_hana_process_list(parsed):
    return [(process_name, {}) for process_name in parsed]


def check_sap_hana_process_list(item, params, parsed):
    if item in parsed:
        data = parsed[item]
        state = 0
        dispstatus = data['dispstatus']
        if dispstatus != 'GREEN':
            state = 2
        return state, '[%s] Status: %s (%s)' % \
               (data["description"], data['textstatus'], dispstatus)


check_info['sap_hana_process_list'] = {
    'parse_function'        : parse_sap_hana_process_list,
    'inventory_function'    : inventory_sap_hana_process_list,
    'check_function'        : check_sap_hana_process_list,
    'service_description'   : 'SAP HANA Process %s',
}
