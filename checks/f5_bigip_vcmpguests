#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example SNMP output:
#
# .1.3.6.1.4.1.3375.2.1.13.4.2.1.1.8.101.97.115.108.50.48.48.49.0 easl2001 # sysVcmpStatVcmpName
# .1.3.6.1.4.1.3375.2.1.13.4.2.1.1.8.112.97.115.108.50.48.48.49.0 pasl2001
# .1.3.6.1.4.1.3375.2.1.13.4.2.1.1.8.116.97.115.108.50.48.48.49.0 tasl2001
# .1.3.6.1.4.1.3375.2.1.13.4.2.1.17.8.101.97.115.108.50.48.48.49.0 Standby # sysVcmpStatPrompt
# .1.3.6.1.4.1.3375.2.1.13.4.2.1.17.8.112.97.115.108.50.48.48.49.0 Standby
# .1.3.6.1.4.1.3375.2.1.13.4.2.1.17.8.116.97.115.108.50.48.48.49.0 Standby


def parse_f5_bigip_vcmpguests(info):
    return {guest: status.lower() for node, guest, status in info}


def inventory_f5_bigip_vcmpguests(parsed):
    if parsed:
        return [(None, None)]


def check_f5_bigip_vcmpguests(_no_item, _no_params, parsed):
    for guest in sorted(parsed):
        yield 0, "Guest [%s] is %s" % (guest, parsed[guest])


check_info["f5_bigip_vcmpguests"] = {
    "parse_function": parse_f5_bigip_vcmpguests,
    "check_function": check_f5_bigip_vcmpguests,
    "inventory_function": inventory_f5_bigip_vcmpguests,
    "service_description": "BIG-IP vCMP Guests",
    "node_info": True,
    "snmp_info": (
        ".1.3.6.1.4.1.3375.2.1.13.4.2.1",
        [
            "1",  # sysVcmpStatVcmpName
            "17",  # sysVcmpStatPrompt
        ]),
    "snmp_scan_function": lambda oid: scan_f5_bigip_cluster_status(oid, is_v11_2=True),
    "includes": ["f5_bigip.include"],
}
