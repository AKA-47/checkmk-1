#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2018             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_aws_s3(info):
    parsed = {}
    for row in parse_aws(info):
        splitted_row = row['Id'].split("_")
        inst = parsed.setdefault(row['Label'], {}).setdefault(splitted_row[0], {})
        try:
            inst.setdefault(splitted_row[1], row['Values'][0])
        except (IndexError, ValueError):
            pass
    return parsed


@get_parsed_item_data
def check_aws_s3(item, params, metrics):
    sum_size = sum(metrics['bucketsizebytes'].values())
    yield 0, 'Bucket size: %s' % get_bytes_human_readable(sum_size), [('bucket_size', sum_size)]

    num_objects = sum(metrics['numberofobjects'].values())
    yield 0, 'Number of objects: %s' % int(num_objects), [('num_objects', num_objects)]


check_info['aws_s3'] = {
    'parse_function': parse_aws_s3,
    'inventory_function': discover(),
    'check_function': check_aws_s3,
    'service_description': 'AWS/S3 Objects %s',
    'has_perfdata': True,
    'includes': ['aws.include'],
}
