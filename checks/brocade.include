#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# This is the variable for the actual rule
brocade_fcport_inventory = []

def brocade_fcport_inventory_this_port(admstate, phystate, opstate, settings):
    default_inventory_phystates = [ 3, 4, 5, 6, 7, 8, 9, 10 ]
    default_inventory_opstates  = [ 1, 2, 3, 4, ]
    default_inventory_admstates = [ 1, 3, 4, ]

    admstates = settings.get('admstates', default_inventory_admstates)
    opstates = settings.get('opstates', default_inventory_opstates)
    phystates = settings.get('phystates', default_inventory_phystates)

    return admstate in admstates and \
           opstate in opstates and \
           phystate in phystates



def brocade_fcport_getitem(number_of_ports, index, portname, is_isl, settings):

    uses_portname = settings.get('use_portname', True)
    shows_isl = settings.get('show_isl', True)

    itemname = ("%0" + str(len(str(number_of_ports))) + "d") % (index - 1)
    if is_isl and shows_isl:
        itemname += " ISL"
    if portname.strip() and uses_portname:
        itemname += " " + portname.strip()
    return itemname


# Inverse to the above. Caveat: Maps back to an index that starts with 1,
# as the SNMP tables in brocade_fcport and brocade_sfp are indexed this way.
# TODO: Check whether we can simplify brocade_fcport a bit using this.
def brocade_item_to_port_number(item):
    return int(item.split()[0]) + 1
