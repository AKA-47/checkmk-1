#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.plugins.agent_based.hp_proliant_mem import Section  # temporarily, during migration!


def _find_or_create_device(device_table, module):
    # From dmidecode in case of dual host config we have to proof
    # if there's already an existing devices table
    for device in device_table:
        if device.get("set") == module.number:
            return device

    device_table.append({})
    return device_table[-1]


def inv_hp_proliant_mem(section: Section):

    for module in section.values():
        device_table = inv_tree_list("hardware.memory.array_{module.cpu_num}.devices")

        device = _find_or_create_device(device_table, module)
        device.update({
            "size": module.size,
            "serial": module.serial,
            "type": module.typ,
            "set": module.number,
            "locator": module.cpu_num
        })


# TODO: bring this back CMK-5976
#
#inv_info['hp_proliant_mem'] = {
#    'inv_function': inv_hp_proliant_mem,
#}
