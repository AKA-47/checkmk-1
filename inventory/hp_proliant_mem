#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.plugins.agent_based.hp_proliant_mem import Section  # temporarily, during migration!


def inv_hp_proliant_mem(section: Section):
    node = inv_tree_list("hardware.memory.arrays:")

    infos = {}
    for module in section.values():
        infos.setdefault((module.cpu_num - 1, module.number), {
            "serial": module.serial,
            "type": module.typ,
        })

    # From dmidecode in case of dual host config we have to proof
    # if there's already an existing devices table
    try:
        for (cpu_num, module_index), module_info in infos.items():
            for entry in node[cpu_num].get("devices", []):
                if entry["set"] == module_index:
                    entry.update(module_info)
    except Exception:
        array = {"devices": []}
        for module in section.values():

            array["devices"].append({
                "size": module.size,
                "serial": module.serial,
                "type": module.typ,
                "set": module.number,
                "locator": module.cpu_num
            })

        node.append(array)


# TODO: bring this back CMK-5976
#
#inv_info['hp_proliant_mem'] = {
#    'inv_function': inv_hp_proliant_mem,
#}
