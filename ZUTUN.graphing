[3] au: Implementierung von "Average": einfach die kleine Funktion
    au: schreiben, die auch None korrekt berücksichtig. Dann
    au: im Graphdesigner das Average auch einbauen.


[4] Titel der Graphen selbst


[5] au: Titel der einzelnen Metriken. Hierbei berücksichtigen,
    au: ob alle Kurven vom gleichen Host oder Service kommen.
    au: Frage klären, ob eventuell sogar der Name der Metrik
    au: auch weggealssen wird - z.B. wenn der Graph nur eine
    au: einzige Metrik zeigt und diese schon im Graph-Titel
    au: zu sehen ist.


[6] Graph zu Dashboard hinzufügen.


[7] Graph zu Report hinzufügen.


[8] Graph zu "GraphCollections" hinzufügen.


[9] Fall, dass ein Graph negative Metrik hat ("-line", "-area", "-stacked")


[10] Graphen mit mehreren Areas, saubere Stacks bilden.
     Wenn die erste metrik line oder area ist, nimmt man area,
     sonst stacked.


[11] Erkennung ob combined_graphs möglich sind (web/htdocs/config.py)
     sauber machen.


[12] Limit auf Menge der dargestellten Objekte.


[13] Graphen von Hosts. Dazu den Hostcheck auf "PING" ändern, echte
     Metriken sammeln.


[14] Import views und visuals irgendwie aufrüamen


[16] Prüfung auf eine einheitliche Unit? Brauchen wir das? Im Originalcode ist
     von den normalen Templates.


[17] Explizite Reihenfolge der Knöpfe festlegen.


[18] Default festlegen, wenn man auf die Seite kommt. Sollen wir einfach "Summe"
     nehmen?


[19] Umswitchen der Darstellungsarten über die Knöpfe soll den gewählten Zeitbereich beibehalten.
     Geht das überhaupt?
